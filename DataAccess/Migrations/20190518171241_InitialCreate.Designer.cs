// <auto-generated />
using System;
using Mandak.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Mandak.DataAccess.Migrations
{
    [DbContext(typeof(MandakContext))]
    [Migration("20190518171241_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Mandak.DataAccess.Entities.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Conductor");

                    b.Property<string>("Location");

                    b.Property<DateTime>("Time");

                    b.HasKey("Id");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("Mandak.DataAccess.Entities.ArticleText", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ArticleId");

                    b.Property<string>("Description");

                    b.Property<byte>("Language");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.ToTable("ArticleTexts");
                });

            modelBuilder.Entity("Mandak.DataAccess.Entities.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Conductor");

                    b.Property<string>("Location");

                    b.Property<int>("NumberOfAudios");

                    b.Property<int>("NumberOfImages");

                    b.Property<string>("PublicId")
                        .IsRequired();

                    b.Property<DateTime>("Time");

                    b.HasKey("Id");

                    b.HasAlternateKey("PublicId");

                    b.ToTable("events");
                });

            modelBuilder.Entity("Mandak.DataAccess.Entities.EventText", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<int>("EventId");

                    b.Property<byte>("Language");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("EventTexts");
                });

            modelBuilder.Entity("Mandak.DataAccess.Entities.Video", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EventId");

                    b.Property<string>("Source");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("Video");
                });

            modelBuilder.Entity("Mandak.DataAccess.Entities.ArticleText", b =>
                {
                    b.HasOne("Mandak.DataAccess.Entities.Article", "Article")
                        .WithMany("Texts")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Mandak.DataAccess.Entities.EventText", b =>
                {
                    b.HasOne("Mandak.DataAccess.Entities.Event", "Event")
                        .WithMany("Texts")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Mandak.DataAccess.Entities.Video", b =>
                {
                    b.HasOne("Mandak.DataAccess.Entities.Event", "Event")
                        .WithMany("Videos")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
